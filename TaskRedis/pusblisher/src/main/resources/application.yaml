spring:
  application:
    name: publisher
  jpa:
    hibernate:
      ddl-auto: create-drop
  datasource:
    url: jdbc:postgresql://localhost:5432/distcomp
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  liquibase:
    enabled: true
    change-log: classpath:db/changelog/changelog-master.xml
  data:
    redis:
      host: localhost
      port: 6379
  cache:
    type: redis
    redis:
      time-to-live: 60000
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            type:
              mapping: KafkaRequestTo:by.bsuir.publisher.client.discussion.kafka.dto.KafkaRequestTo
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            type:
              mapping: KafkaResponseTo:by.bsuir.publisher.client.discussion.kafka.dto.KafkaResponseTo
            trusted:
              packages: "*"

rest-client:
  base-url: http://localhost:24130/api/v1.0

topic:
  tweet-note:
    request: InTopic
    response: OutTopic

server:
  port: 24110
  servlet:
    context-path: /api/v1.0

logging:
  level:
    org:
      springframework:
        cache: DEBUG
        boot:
          autoconfigure:
            cache: DEBUG
